set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
" let Vundle manage Vundle, required

"-------------------
"Plugin Insatll
"-------------------
Plugin 'VundleVim/Vundle.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"--------------
"VIM UI Config
"--------------

let mapleader = "\<Space>"

"highlight current line
au WinLeave * set nocursorline nocursorcolumn
au WinEnter * set cursorline cursorcolumn
set cursorline cursorcolumn

"Edit Setting
set report=0
set number
set showmatch
set showcmd                " show typed command in status bar
set title                  " show file in titlebar
set laststatus=2           " use 2 lines for the status bar
set matchtime=2            " show matching bracket for 0.2 seconds
set matchpairs+=<:>        " specially for html
" set relativenumber

set autoindent
set smartindent
set shiftwidth=4
set tabstop=4
set expandtab

"-----------------
"Plugin Config
"-----------------

"Nerd Tree
nmap <F4> :NERDTreeToggle<cr>

let NERDChristmasTree=0
let NERDTreeWinSize=30
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\~$', '\.pyc$', '\.swp$']
" let NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$',  '\~$']
let NERDTreeShowBookmarks=1
let NERDTreeWinPos = "right"

"YouCompleteMe
let g:ycm_collect_identifiers_from_comments_and_strings = 0
let g:ycm_min_num_of_chars_for_completion=2
let g:ycm_cache_omnifunc=0
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_complete_in_comments = 1
let g:ycm_complete_in_strings = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_python_binary_path = '/usr/bin/python3'
map <C-G>  :YcmCompleter GoToDefinitionElseDeclaration<CR>
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
set complete-=i

"Syntastics
let g:syntastic_error_symbol='>>'
let g:syntastic_warning_symbol='>'
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=1
let g:syntastic_enable_highlighting=0
let g:syntastic_python_checkers=['flake8']
"highlight SyntasticErrorSign guifg=white guibg=black
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5

function! ToggleErrors()
    let old_last_winnr = winnr('$')
    lclose
    if old_last_winnr == winnr('$')
        " Nothing was closed, open syntastic error location panel
        Errors
    endif
endfunction

nnoremap <leader>s  :call ToggleErrors()<cr>
nnoremap <leader>sn :lnext<cr>
nnoremap <leader>sp :lprevious<cr>

"-----------------
"Useful Function
"-----------------

"Easier navigation between split windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

"Python File Head
function HeaderPython()
    call setline(1, "#!/usr/bin/python3")
    call append(1, "# -*- coding:utf-8 -*-")
    "call append(2, "# author:Wang Feng" . strftime('%Y-%m-%d %T', localtime()))
    normal G
    normal o
    normal o
endfunction
autocmd bufnewfile *.py call HeaderPython()

"Auto Compile and Run
map <F5> :call CompileRunGcc()<CR>
functio! CompileRunGcc()
    exec "w"
    if &filetype == 'c'
        exec '!g++ % -o %<'
        exec '!./%<'
    elseif &filetype == 'cpp'
        exec '!g++ % -o %<'
        exec '!./%<'
    elseif &filetype == 'python'
        exec '!python3 %'
    elseif &filetype == 'sh'
        :!bash %
    endif
endfunction

